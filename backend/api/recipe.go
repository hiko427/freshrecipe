package api

import (
	"context"
	"fmt"

	"github.com/gin-gonic/gin"
	"github.com/sashabaranov/go-openai"
)

type RecipeData struct {
	Cuisine             string `form:"cuisine" binding:"required"`
	NumPeople           int    `form:"num_people" binding:"required"`
	Ingredients         string `form:"ingredients" binding:"required"`
	ExcludedIngredients string `form:"excluded_ingredients" binding:"required"`
	MealType            string `form:"meal_type" binding:"required"`
}

func (server *Server) createRecipe(ctx *gin.Context) {
	var recipeData RecipeData
	if err := ctx.ShouldBind(&recipeData); err != nil {
		ctx.JSON(400, gin.H{"error": err.Error()})
		return
	}
	content := "あなたはプロのシェフです。以下の条件に基づいてレシビ（料理名、必要な食材や調味料の分量、作り方、かかる時間などの情報が含まれる）を生成してください。\n *ジャンル：" +
		recipeData.Cuisine + "\n *人数：" + string(rune(recipeData.NumPeople)) + "\n *必要な食材：" + recipeData.Ingredients + "\n *いらない食材:" + recipeData.ExcludedIngredients +
		"\n *レシピの時間帯:" + recipeData.MealType
	client := openai.NewClient("secret")
	resp, err := client.CreateChatCompletion(
		context.Background(),
		openai.ChatCompletionRequest{
			Model: openai.GPT3Dot5Turbo,
			Messages: []openai.ChatCompletionMessage{
				{
					Role:    openai.ChatMessageRoleUser,
					Content: content,
				},
			},
		},
	)

	if err != nil {
		fmt.Printf("ChatCompletion error: %v\n", err)
		return
	}

	fmt.Println(resp.Choices[0].Message.Content)
	// chatGPTRequest := ChatGPTRequest{
	// 	Model: "gpt-3.5-turbo",
	// 	Messages: []Message{
	// 		{
	// 			Role:    "user",
	// 			Content: "请为我生成一个包含以下成分的简单食谱：鸡肉、西红柿、洋葱。要求不使用牛奶和鸡蛋。",
	// 		},
	// 	},
	// }

	// fmt.Printf("接收到的表单数据: %#v\n", chatGPTRequest)
	// response, err := callChatGPT(chatGPTRequest)
	// if err != nil {
	// 	ctx.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
	// 	return
	// }

	// ctx.JSON(http.StatusOK, gin.H{"response": response})

	// ctx.HTML(http.StatusOK, "index.tmpl", gin.H{
	// 	"title": "recipe generated by chatgpt",
	// })

}
